t.telefone
t.nome
n
c
puts t.nome
t.nome
n
t
n
t
c
teste.set_nome
teste.set_nome("Alexandre")
teste.set_nome("Alexandre"
teste.set_nome
set_nome
teste.set_nome
n
teste
n
c
teste.set_nome
Teste.set_nome
puts teste.set_nome
puts teste.nome
teste
teste.set_nome
teste.set_telefone
n
c
teste.set_nome
n
teste.set_nome
teste
n
c
Teste.new.novo_metodo3("Aprendi", "Off Course")
Teste.definir("novo_metodo3")
n
Teste.novo_metodo
puts a
a
n
a
c
n
c
definir
novo_metodo
n
c
t.fim
t.inicio
n
c
mostrar
nome('Alexandre')
mostrar
c
bloco
c
bloco
s
c
C
puts bloco
bloco
n
puts bloco
bloco
c
bloco
puts bloco
n
c
TesteFinal.de_classe
n
c
C
puts ss.metodo_de_classe
String.metodo_de_classe
puts ss.tirar_espaco
puts ss
String.Teste
String.Teste2
n
String.tirar_espaco
String.methods
ss.methods
n
ss.methods
n
ss.methods
c
Cliente.new
Cliente.new.validar_cpf
Cliente.new
Cliente::validar_cpf
Cliente.validar_cpf
Fornecedor.new
n
Fornecedor.new
Cliente.new
n
Cliente.new
n
Fornecedor.new
Cliente.new
n
c
Utilidades::Cpf
Utilidades.Cpf
n
c
Utilidades::Cpf
Utilidades.Cpf
c
puts Aluno.telefone
Aluno.telefone = "Mudou a String"
puts Aluno.telefone
n
Aluno.methods
n
Aluno.methods
n
teste.nome = "teste"
teste.nome
teste.Aluno.nome
Aluno.nome
teste.methods
teste.methos
puts teste.nome
teste.nome
teste = Aluno.new
puts Aluno.endereco
puts Aluno.nome
c
god.diga_oi
god.methods
god.falar_palavra
n
nn
n
nn
n
c
n
c
n
c
cc
c
str.methods
n
str.methods
c
puts str.nome
n
puts str.nome
puts str
c
n
c
tt.is_a? class
tt.is_a?class
tt.is_a?1
tt.is_a?int
tt.equal?1
tt.equal?
tt.instance_equal?
tt.instance_variables
tt.is_a?
tt.methods
n
c
n
tt.nome
puts tt
puts tt.self
puts tt.sef
puts Classe_attr.nome
puts tt
puts tt.nome
n
c
alx.methods
c
n
c
puts d
n
c
puts d
d.nome
n
d.nome
n
d.nome
c.mostrar
n
c
n
c
q
a.methods
a.mostrar
n
a.mostrar
n
q
eixt
a.mostrar
defined? a
a.methods
a.class
n
c
n
c
v
b
h
y
q
c
